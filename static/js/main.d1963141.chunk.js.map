{"version":3,"sources":["helpers/index.ts","components/product/index.tsx","components/app/index.tsx","index.tsx"],"names":["unitsText","data","units","getClassName","base","mods","filter","item","length","reduce","prev","push","join","getPlurals","unitsDictionary","value","toString","slice","addUnitsText","params","text","Product","id","title","taste","gift","quantity","weight","temptation","isClientHappy","inputId","useState","isChecked","setChecked","isDisabled","setDisabled","isLeaved","setLeaved","isHover","setHover","getMods","productClassName","cardClassName","temptationElement","common","actionBtn","finished","selected","className","onClick","onCardClick","type","temptationActionText","getTemptationElement","descText","descSelectedHover","desc","getDesc","name","checked","disabled","onChange","event","isInputChecked","currentTarget","aria-hidden","onMouseLeave","onMouseOver","dataItems","clientHappy","map","index","valueElement","key","getFeaturesItems","replace","App","cards","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1963141.chunk.js","sourcesContent":["import data from '../data.json';\nconst unitsText: Record<string, string | Array<string>> = data.units;\n\nexport const getClassName = (base: string, mods: Array<string> | null): string => {\n  if (mods) {\n    mods = mods.filter(item => item);\n  }\n  if (!mods || mods.length === 0) {\n    return base;\n  }\n\n  const classesList = mods.reduce((prev, item) => {\n    prev.push(`${base}--${item}`);\n    return prev;\n  }, [base]);\n\n  return classesList.join(' ');\n};\n\nexport const formatWeight = (value: number | undefined): string => {\n  if (!value) {\n    return '';\n  }\n  return value.toString().replace('.', ',');\n};\n\ninterface IaddUnitsText { value: number; units: string }\n\ninterface IgetPlurals {\n  unitsDictionary: Array<string>;\n  value: number;\n}\n\nconst getPlurals = ({ unitsDictionary, value }: IgetPlurals): string => {\n  if (unitsDictionary.length < 3) {\n    return '';\n  }\n\n  if (value > 100) {\n    value = +value.toString().slice(-2);\n  }\n\n  if (value > 20) {\n    value = value % 10;\n  }\n\n  if (value === 1) {\n    return unitsDictionary[0];\n  }\n\n  if (value > 1 && value < 5) {\n    return unitsDictionary[1];\n  }\n\n  return unitsDictionary[2];\n};\n\nexport const addUnitsText = (params: IaddUnitsText): valueWithUnits => {\n  const { value, units } = params;\n  const text: string | Array<string> = unitsText[units];\n\n  if (typeof text === 'string') {\n    return {\n      ...params,\n      unitsText: text\n    }; ;\n  }\n\n  return {\n    ...params,\n    unitsText: getPlurals({ unitsDictionary: text, value })\n  };\n};\n","import React, { Fragment, useState } from 'react';\nimport { getClassName, formatWeight } from '../../helpers';\n\nimport data from '../../data.json';\nimport './styles.scss';\n\ninterface IProduct {\n  id: string,\n  title: string,\n  taste: string,\n  quantity: valueWithUnits,\n  gift: valueWithUnits,\n  weight: valueWithUnits,\n  temptation: { selected: string, finished: string },\n  isClientHappy: boolean | undefined\n}\n\nfunction Product({\n  id,\n  title,\n  taste,\n  gift,\n  quantity,\n  weight,\n  temptation,\n  isClientHappy\n}: IProduct) {\n  const inputId: string = `product-${id}`;\n  const [isChecked, setChecked] = useState(false);\n  const [isDisabled, setDisabled] = useState(false);\n  const [isLeaved, setLeaved] = useState(false);\n  const [isHover, setHover] = useState(false);\n  const mods = getMods();\n  const productClassName = getClassName('product', mods);\n  const cardClassName = getClassName('product__card', mods);\n  const temptationElement = getTemptationElement();\n  const descText = getDesc();\n\n  function getMods() {\n    const mods = [];\n\n    if (isChecked) {\n      mods.push('checked')\n    }\n    if (isDisabled) {\n      mods.push('disabled')\n    }\n\n    return mods;\n  }\n\n  function getTemptationElement() {\n    let text = data.common.temptation;\n    let actionBtn = null;\n\n    if (isDisabled) {\n      text = temptation.finished;\n    }\n\n    if (isChecked) {\n      text = temptation.selected;\n    }\n\n    if (!isDisabled && !isChecked) {\n      actionBtn = <Fragment>\n        &nbsp;<button\n        className=\"product__temptation-button\"\n        onClick={onCardClick}\n        type=\"button\">{data.common.temptationActionText}</button>\n      </Fragment>\n    }\n\n    return (\n      <div className=\"product__temptation\">\n        {text}\n        {actionBtn}\n      </div>\n    )\n  }\n\n  function getDesc() {\n    if (isChecked && isLeaved && isHover) {\n      return data.common.descSelectedHover;\n    }\n\n    return data.common.desc;\n  }\n\n  function onInputChange(event: React.FormEvent<HTMLInputElement>) {\n    const isInputChecked = event.currentTarget.checked;\n    setChecked(isInputChecked);\n\n    if (!isInputChecked) {\n      setLeaved(false);\n    }\n  }\n\n  function onCardClick () {\n    if (isDisabled) {\n      return;\n    }\n\n    if (!isChecked) {\n      setLeaved(false);\n    }\n\n    setChecked(!isChecked);\n  }\n\n  function onCardLeave () {\n    setHover(false);\n\n    if (!isChecked) {\n      setLeaved(false);\n      return;\n    }\n\n    setLeaved(true);\n  }\n\n  function onCardHover() {\n    setHover(true);\n  }\n\n  function getFeaturesItems() {\n    const dataItems = [\n      quantity,\n      {\n        ...gift,\n        text: 'в подарок'\n      }\n    ];\n\n    if(isClientHappy) {\n      dataItems.push({ text: data.common.clientHappy });\n    }\n\n    let items = dataItems.map(({ value, unitsText, text }, index) => {\n      let valueElement;\n      const id = `feature-${index}`;\n\n      if ((value && value > 1)) {\n        valueElement = <Fragment>\n          <span className=\"product__value\">\n            {value}\n          </span>&nbsp;\n        </Fragment>;\n      }\n\n      if (unitsText && text) {\n        unitsText += ' '\n      }\n\n      return (\n        <li\n          key={id}\n          className=\"product__feature\"\n        >\n          {valueElement}\n\n          {unitsText}\n\n          {text}\n        </li>\n      )\n    })\n\n    return items;\n  }\n\n  return (\n    <div className={productClassName}>\n      <input\n        className=\"product__input visually-hidden\"\n        type=\"checkbox\"\n        name=\"product\"\n        id={inputId}\n        checked={isChecked}\n        disabled={isDisabled}\n        onChange={onInputChange}\n      />\n      {/*\n      Скрытый лейбл для скринридеров.\n      Я не уверена в красоте этого решения, но мне хотелось\n      сохранить доступность для скринридеров и возможность\n      удобной стилизации для обычных пользователей\n      */}\n      <label\n        className=\"visually-hidden\">{`${data.common.desc}. ${title} ${{ taste }}`}\n      </label>\n\n      <div\n        className={cardClassName}\n        aria-hidden=\"true\"\n        onClick={onCardClick}\n        onMouseLeave={onCardLeave}\n        onMouseOver={onCardHover}\n      >\n        <div className=\"product__card-inner\">\n          {/*\n          По клику на описание карточка дизейблится\n          Сделано для удобной проверки состояния\n          */}\n          <div\n            className=\"product__desc\"\n            onClick={() => {\n              setDisabled(!isDisabled);\n            }}\n          >{descText}</div>\n\n          <h2 className=\"product__title\">\n            {title}\n            <span className=\"product__taste\">{taste}</span>\n          </h2>\n\n          <ul className=\"product__features\">\n            {getFeaturesItems()}\n          </ul>\n\n          <div className=\"product__weight\">\n            {formatWeight(weight.value)}\n\n            <div className=\"product__weight-units\">\n              {weight.unitsText}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {temptationElement}\n    </div>\n  );\n}\n\nexport default Product;\n","import React from 'react';\n\nimport Card from '../product'\nimport { addUnitsText } from '../../helpers';\n\nimport data from '../../data.json';\nimport './styles.scss';\n\nfunction App() {\n  const cards = data.items.map(item => {\n    const { id, taste, gift, weight, quantity, temptation, isClientHappy } = item;\n\n    return (\n      <Card\n        id={id}\n        key={id}\n        title={data.common.name}\n        taste={taste}\n        gift={addUnitsText(gift)}\n        weight={addUnitsText(weight)}\n        quantity={addUnitsText(quantity)}\n        temptation={temptation}\n        isClientHappy={isClientHappy}\n      />\n    )\n  });\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Ты сегодня покормил кота?</h1>\n      {cards}\n    </div>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}